<Window x:Class="SharpMusicLibraryUpdater.App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SharpMusicLibraryUpdater.App"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.WIndows.Interactivity"
        mc:Ignorable="d"
        Name="mainWindow"
        Title="SharpMusicLibraryUpdater" SizeToContent="WidthAndHeight" WindowStartupLocation="CenterScreen" AllowDrop="False"
        IsEnabled="{Binding IsNotBusy}" MinHeight="600" MinWidth="800">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding OnClosingCommand}" />
        </i:EventTrigger>        
    </i:Interaction.Triggers>
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Styles.xaml" />
                <ResourceDictionary Source="Resources/Converters.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBindingCloseWindow_CanExecute"
                        Executed="CommandBindingCloseWindow_Executed" />        
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="{Binding OpenMusicLibraryCommand}" Key="O" Modifiers="Ctrl" />
        <KeyBinding Command="{Binding GetAlbumsCommand}" Key="G" Modifiers="Ctrl" />
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <MenuItem Header="_File">
                <MenuItem Header="_Open Music Library Folder..." Command="{Binding OpenMusicLibraryCommand}" InputGestureText="Ctrl+O">
                    <MenuItem.Icon>
                        <Image Source="Images\folder.png" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Check for New Albums" Command="{Binding GetAlbumsCommand}" InputGestureText="Ctrl+G">
                    <MenuItem.Icon>
                        <Image Source="Images\refresh.png" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="_Exit" Command="{x:Static SystemCommands.CloseWindowCommand}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Settings" Command="Properties">
                    <MenuItem.Icon>
                        <Image Source="Images\settings.png" Width="16" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <ToolBarTray Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" IsLocked="True">
            <ToolBar>         
                <Button Command="{Binding OpenMusicLibraryCommand}">
                    <Image Source="Images\folder.png" Width="32" />
                </Button>
                <Button Command="{Binding GetAlbumsCommand}">                    
                    <Image Source="Images\refresh.png" Width="32" />                    
                </Button>
                <Separator />
                <Button IsEnabled="False">
                    <Image Source="Images\settings.png" Width="32" />
                </Button>
            </ToolBar>
        </ToolBarTray>

        <Grid Grid.Row="2" Grid.Column="0">
            <GroupBox Header="Artists">                
                <DataGrid Name="dataGrid_Artists" AutoGenerateColumns="False" ItemsSource="{Binding ModelCollectionView}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" />
                        <DataGridTextColumn Header="iTunes Name" Binding="{Binding ITunesName}" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Ignore">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsIgnored, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridCheckBoxColumn Header="Check for Singles" IsReadOnly="True" />
                        <DataGridTextColumn Header="New Albums Available" />-->
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource isIgnoredAndNewAlbumsToColorConverter}">
                                        <Binding Path="IsIgnored" />
                                        <Binding Path="NewAlbums" Mode="TwoWay" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.RowStyle>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ShowAlbumsCommand}" CommandParameter="{Binding Path=SelectedItem, 
                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </GroupBox>
        </Grid>
        
        <Grid Grid.Row="2" Grid.Column="1">
            <GroupBox Header="New Albums">
                <DataGrid Name="dataGrid_Albums" AutoGenerateColumns="False" ItemsSource="{Binding NewAlbums}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding AlbumName}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Release Date" Binding="{Binding ReleaseDate}" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Mark As Seen">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding MarkAsSeen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="{Binding MarkAsSeen, Converter={StaticResource booleanToColorConverter}}" />
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </GroupBox>
        </Grid>

        <StatusBar Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" MinHeight="20">
            <ProgressBar IsIndeterminate="{Binding IsNotBusy, Converter={StaticResource negateBooleanConverter}}" MinWidth="100" MinHeight="15" />
        </StatusBar>
    </Grid>
</Window>
